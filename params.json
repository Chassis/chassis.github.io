{"name":"Chassis","tagline":"","body":"# Sennza Chassis\r\n\r\nThis is the new fangled base repository for Sennza work.\r\n\r\n## Prerequisites\r\n\r\nBefore using Chassis, this is how your system should be set up:\r\n\r\n* Install [Vagrant](http://vagrantup.com/)\r\n* Install vagrant-hostsupdater to access via `vagrant.local`:\r\n\r\n\t\tvagrant plugin install vagrant-hostsupdater\r\n\r\n  **Note for Windows users:** You'll need to set\r\n  `C:\\Windows\\system32\\drivers\\etc\\hosts` to be writable by your user. Simply\r\n  head to the properties and add your user with full control under security.\r\n\r\n  Alternatively, add `vagrant.local` to your hosts file with `192.168.33.10` as\r\n  the IP address.\r\n\r\n## Using\r\n\r\n```bash\r\n# Clone this repo\r\ngit clone --recursive git@github.com:sennza/Chassis.git myproject\r\n# If you forget --recursive:\r\n# git submodule update --init\r\n\r\ncd myproject\r\n\r\n# Clone the content/ directory!\r\n# git clone git@github.com:sennza/myproject.git content\r\n\r\n# Use https://github.com/sennza/wp-content as a base, and follow the\r\n# instructions there.\r\n\r\n# Boot up a VM\r\nvagrant up\r\n```\r\n\r\nMake sure you copy `local-config-sample.php` to `local-config.php`\r\n\r\n## Working with the VM\r\n\r\n```bash\r\n# Start the VM\r\nvagrant up\r\n\r\n# SSH in to the VM\r\nvagrant ssh\r\n\r\n# Reprovisioning (e.g. after updating this repository)\r\nvagrant provision\r\n\r\n# Reprovisioning without a full apt-get update\r\nvagrant provision --provision-with puppet\r\n\r\n# Suspending (sleeping) the VM\r\n# Note that this doesn't remove the hosts entry\r\nvagrant suspend\r\n\r\n# Halting (shutting down) the VM\r\nvagrant halt\r\n\r\n# Destroying the VM (if your VM is completely broken)\r\nvagrant destroy\r\n```\r\n\r\n## Configuration\r\nChassis contains a flexible configuration setup, allowing you flexibility in\r\noverriding the defaults. Chassis follows the following loading procedure:\r\n\r\n* `content/config.local.yaml` (project-specific overrides)\r\n* `content/config.yaml` (project-specific defaults)\r\n* `config.local.yaml` (global overrides)\r\n* `config.yaml` (global defaults)\r\n\r\n### Multisite\r\nChassis has full support for running WordPress in multisite mode. Here's what\r\nyou need to do to enable it:\r\n\r\n1. Add `multisite: Yes` to your `config.local.yaml` or project configuration.\r\n2. Provision your VM!\r\n\r\n   (Note: due to [a bug][#32], you need to destroy and recreate an\r\n   already-provisioned VM. We're working on fixing this.)\r\n\r\nThat's it!\r\n\r\n[#32]: https://github.com/sennza/Chassis/issues/32\r\n\r\n### Adding \"Real\" Domains\r\n\r\nWe've realized internally that using vagrant.local doesn't always cut it for\r\ndevelopment, as you may need to use a different domain for testing. Thankfully\r\nwe can fake it 'til we make it by overriding the default configuration.\r\n\r\n1. Add your hosts to your YAML configuration. We recommend using your\r\n   project-specific configuration (`content/config.yaml`), since it's part of\r\n   the site's configuration.\r\n\r\n   ```yaml\r\n   hosts:\r\n       - vagrant.local\r\n       - example.sennza.com.au\r\n   ```\r\n\r\n   (The first host in the list will be used as the machine's name. We recommend\r\n   leaving this as `vagrant.local` for the most part.)\r\n\r\n2. Reboot your VM (`vagrant reload`)\r\n\r\n### MySQL Database\r\nYour database can be configured completely via the YAML configuration. This is\r\nwhere the YAML hierarchy is most useful:\r\n\r\n* `config.yaml` contains the default (User `wordpress`, password `vagrantpassword`)\r\n* `config.local.yaml` can contain your \"real\" database details. These can be\r\n  generated by a deployment script, such as Capistrano.\r\n\r\n## Updating\r\n\r\n```bash\r\n# Pull and rebase (in case you have project-specific commits)\r\ngit pull --rebase\r\n\r\n## Update submodules (Puppet modules and WP)\r\ngit submodule update --init\r\n```\r\n\r\n\r\n## Update Your Submodules\r\n\r\nSometimes we have to change the submodules because a repository isn't being\r\nregularly maintained. e.g. [Use Puppet Labs's apt module][issue-5].\r\nWhen this happens you'll probably get confused by submodules so here are the\r\ncommands you need to run to get your submodules up to date again.\r\n\r\n[issue-5]: https://github.com/sennza/Chassis/issues/5\r\n\r\n```\r\ngit submodule sync\r\ncd puppet/modules/apt\r\ngit checkout master\r\ngit pull\r\n\r\n# Ensure your VM is up-to-date\r\nvagrant provision\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}